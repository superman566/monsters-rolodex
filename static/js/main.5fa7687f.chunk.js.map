{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handlerChange","App","handleonChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAW,iBAAhB,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,uBACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCHVC,EAAW,SAAAR,GACtB,OACE,qBAAKC,UAAW,YAAhB,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNhBM,G,MAAY,SAAAX,GACvB,OACE,uBACEC,UAAU,SACVW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,kBCqCPC,E,kDAtCb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAZrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAO7C,WAAU,IAAD,EAIHC,KAAKN,MAFPd,EAFK,EAELA,SACAW,EAHK,EAGLA,YAEIU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,YAAc,iBACdE,cAAgBc,KAAKZ,iBAEvB,cAAC,EAAD,CAAUR,SAAUqB,W,GAjCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5fa7687f.chunk.js","sourcesContent":["import './card.styles.css';\n\nexport const Card = props => (\n  <div className={'card-container'}>\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&180*180`} />\n    <h1>{props.monster.name}</h1>\n    <h2>{props.monster.email}</h2>\n  </div>\n)\n","import './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = props => {\n  return (\n    <div className={'card-list'}>\n      {\n        props.monsters.map(monster => (\n          <Card key={monster.id} monster={monster}/>\n        ))\n      }\n    </div>\n  )}\n","import './search-box.styles.css';\n\nexport const SearchBox = props => {\n  return (\n    <input\n      className='search'\n      type='search'\n      placeholder={props.placeholder}\n      onChange={props.handlerChange} />\n  )\n}\n","import { Component } from 'react';\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users}))\n  }\n\n  handleonChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder = 'search monster'\n          handlerChange={ this.handleonChange }\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}